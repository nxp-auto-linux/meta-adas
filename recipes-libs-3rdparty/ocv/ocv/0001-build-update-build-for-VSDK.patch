From d6653e6d63575a233e718bc30eabe51011edec20 Mon Sep 17 00:00:00 2001
From: Catalin Udma <catalin-dan.udma@nxp.com>
Date: Fri, 24 Aug 2018 11:21:45 +0300
Subject: [PATCH] build: update build for VSDK

Signed-off-by: Catalin Udma <catalin-dan.udma@nxp.com>
---
 cmake/OpenCVFindLibsVideo.cmake | 243 ++++++++++++++--------------------------
 1 file changed, 85 insertions(+), 158 deletions(-)

diff --git a/cmake/OpenCVFindLibsVideo.cmake b/cmake/OpenCVFindLibsVideo.cmake
index 2e09cf2..17f9ded 100644
--- a/cmake/OpenCVFindLibsVideo.cmake
+++ b/cmake/OpenCVFindLibsVideo.cmake
@@ -12,55 +12,15 @@ endif(WITH_VFW)
 
 # --- GStreamer ---
 ocv_clear_vars(HAVE_GSTREAMER)
-# try to find gstreamer 1.x first if 0.10 was not requested
-if(WITH_GSTREAMER AND NOT WITH_GSTREAMER_0_10)
-  if(WIN32)
-    SET(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH};${CMAKE_CURRENT_LIST_DIR}")
-    FIND_PACKAGE(GstreamerWindows)
-    IF(GSTREAMER_gstbase_LIBRARY AND GSTREAMER_gstvideo_LIBRARY AND GSTREAMER_gstapp_LIBRARY AND GSTREAMER_gstpbutils_LIBRARY AND GSTREAMER_gstriff_LIBRARY)
-      set(HAVE_GSTREAMER TRUE)
-      set(GSTREAMER_BASE_VERSION 1.0)
-      set(GSTREAMER_VIDEO_VERSION 1.0)
-      set(GSTREAMER_APP_VERSION 1.0)
-      set(GSTREAMER_RIFF_VERSION 1.0)
-      set(GSTREAMER_PBUTILS_VERSION 1.0)
-    ENDIF(GSTREAMER_gstbase_LIBRARY AND GSTREAMER_gstvideo_LIBRARY AND GSTREAMER_gstapp_LIBRARY AND GSTREAMER_gstpbutils_LIBRARY AND GSTREAMER_gstriff_LIBRARY)
-
-  else(WIN32)
-    CHECK_MODULE(gstreamer-base-1.0 HAVE_GSTREAMER_BASE)
-    CHECK_MODULE(gstreamer-video-1.0 HAVE_GSTREAMER_VIDEO)
-    CHECK_MODULE(gstreamer-app-1.0 HAVE_GSTREAMER_APP)
-    CHECK_MODULE(gstreamer-riff-1.0 HAVE_GSTREAMER_RIFF)
-    CHECK_MODULE(gstreamer-pbutils-1.0 HAVE_GSTREAMER_PBUTILS)
-
-    if(HAVE_GSTREAMER_BASE AND HAVE_GSTREAMER_VIDEO AND HAVE_GSTREAMER_APP AND HAVE_GSTREAMER_RIFF AND HAVE_GSTREAMER_PBUTILS)
-      set(HAVE_GSTREAMER TRUE)
-      set(GSTREAMER_BASE_VERSION ${ALIASOF_gstreamer-base-1.0_VERSION})
-      set(GSTREAMER_VIDEO_VERSION ${ALIASOF_gstreamer-video-1.0_VERSION})
-      set(GSTREAMER_APP_VERSION ${ALIASOF_gstreamer-app-1.0_VERSION})
-      set(GSTREAMER_RIFF_VERSION ${ALIASOF_gstreamer-riff-1.0_VERSION})
-      set(GSTREAMER_PBUTILS_VERSION ${ALIASOF_gstreamer-pbutils-1.0_VERSION})
-    endif()
-  endif(WIN32)
-endif(WITH_GSTREAMER AND NOT WITH_GSTREAMER_0_10)
-
-# if gstreamer 1.x was not found, or we specified we wanted 0.10, try to find it
-if(WITH_GSTREAMER AND NOT HAVE_GSTREAMER OR WITH_GSTREAMER_0_10)
-  CHECK_MODULE(gstreamer-base-0.10 HAVE_GSTREAMER_BASE)
-  CHECK_MODULE(gstreamer-video-0.10 HAVE_GSTREAMER_VIDEO)
-  CHECK_MODULE(gstreamer-app-0.10 HAVE_GSTREAMER_APP)
-  CHECK_MODULE(gstreamer-riff-0.10 HAVE_GSTREAMER_RIFF)
-  CHECK_MODULE(gstreamer-pbutils-0.10 HAVE_GSTREAMER_PBUTILS)
-
-  if(HAVE_GSTREAMER_BASE AND HAVE_GSTREAMER_VIDEO AND HAVE_GSTREAMER_APP AND HAVE_GSTREAMER_RIFF AND HAVE_GSTREAMER_PBUTILS)
-      set(HAVE_GSTREAMER TRUE)
-      set(GSTREAMER_BASE_VERSION ${ALIASOF_gstreamer-base-0.10_VERSION})
-      set(GSTREAMER_VIDEO_VERSION ${ALIASOF_gstreamer-video-0.10_VERSION})
-      set(GSTREAMER_APP_VERSION ${ALIASOF_gstreamer-app-0.10_VERSION})
-      set(GSTREAMER_RIFF_VERSION ${ALIASOF_gstreamer-riff-0.10_VERSION})
-      set(GSTREAMER_PBUTILS_VERSION ${ALIASOF_gstreamer-pbutils-0.10_VERSION})
+if(WITH_GSTREAMER)
+  CHECK_MODULE(gstreamer-base-0.10 HAVE_GSTREAMER)
+  if(HAVE_GSTREAMER)
+    CHECK_MODULE(gstreamer-app-0.10 HAVE_GSTREAMER)
+  endif()
+  if(HAVE_GSTREAMER)
+    CHECK_MODULE(gstreamer-video-0.10 HAVE_GSTREAMER)
   endif()
-endif(WITH_GSTREAMER AND NOT HAVE_GSTREAMER OR WITH_GSTREAMER_0_10)
+endif(WITH_GSTREAMER)
 
 # --- unicap ---
 ocv_clear_vars(HAVE_UNICAP)
@@ -144,7 +104,7 @@ if(WITH_1394)
       if(HAVE_DC1394_2)
         ocv_parse_pkg("libdc1394-2" "${DC1394_2_LIB_DIR}/pkgconfig" "")
         ocv_include_directories(${DC1394_2_INCLUDE_PATH})
-        set(VIDEOIO_LIBRARIES ${VIDEOIO_LIBRARIES}
+        set(HIGHGUI_LIBRARIES ${HIGHGUI_LIBRARIES}
             "${DC1394_2_LIB_DIR}/libdc1394.a"
             "${CMU1394_LIB_DIR}/lib1394camera.a")
       endif(HAVE_DC1394_2)
@@ -166,13 +126,7 @@ endif(WITH_XINE)
 ocv_clear_vars(HAVE_LIBV4L HAVE_CAMV4L HAVE_CAMV4L2 HAVE_VIDEOIO)
 if(WITH_V4L)
   if(WITH_LIBV4L)
-    CHECK_MODULE(libv4l1 HAVE_LIBV4L1)
-    CHECK_MODULE(libv4l2 HAVE_LIBV4L2)
-    if(HAVE_LIBV4L1 AND HAVE_LIBV4L2)
-      set(HAVE_LIBV4L YES)
-    else()
-      set(HAVE_LIBV4L NO)
-    endif()
+    CHECK_MODULE(libv4l1 HAVE_LIBV4L)
   endif()
   CHECK_INCLUDE_FILE(linux/videodev.h HAVE_CAMV4L)
   CHECK_INCLUDE_FILE(linux/videodev2.h HAVE_CAMV4L2)
@@ -185,11 +139,6 @@ if(WITH_OPENNI)
   include("${OpenCV_SOURCE_DIR}/cmake/OpenCVFindOpenNI.cmake")
 endif(WITH_OPENNI)
 
-ocv_clear_vars(HAVE_OPENNI2)
-if(WITH_OPENNI2)
-  include("${OpenCV_SOURCE_DIR}/cmake/OpenCVFindOpenNI2.cmake")
-endif(WITH_OPENNI2)
-
 # --- XIMEA ---
 ocv_clear_vars(HAVE_XIMEA)
 if(WITH_XIMEA)
@@ -200,27 +149,49 @@ if(WITH_XIMEA)
 endif(WITH_XIMEA)
 
 # --- FFMPEG ---
-ocv_clear_vars(HAVE_FFMPEG HAVE_FFMPEG_CODEC HAVE_FFMPEG_FORMAT HAVE_FFMPEG_UTIL HAVE_FFMPEG_SWSCALE HAVE_FFMPEG_RESAMPLE HAVE_GENTOO_FFMPEG HAVE_FFMPEG_FFMPEG)
+ocv_clear_vars(HAVE_FFMPEG HAVE_FFMPEG_CODEC HAVE_FFMPEG_FORMAT HAVE_FFMPEG_UTIL HAVE_FFMPEG_SWSCALE HAVE_GENTOO_FFMPEG HAVE_FFMPEG_FFMPEG)
 if(WITH_FFMPEG)
   if(WIN32 AND NOT ARM)
-    include("${OpenCV_SOURCE_DIR}/3rdparty/ffmpeg/ffmpeg.cmake")
+    include("${OpenCV_SOURCE_DIR}/3rdparty/ffmpeg/ffmpeg_version.cmake")
   elseif(UNIX)
-    CHECK_MODULE(libavcodec HAVE_FFMPEG_CODEC)
-    CHECK_MODULE(libavformat HAVE_FFMPEG_FORMAT)
-    CHECK_MODULE(libavutil HAVE_FFMPEG_UTIL)
-    CHECK_MODULE(libswscale HAVE_FFMPEG_SWSCALE)
-    CHECK_MODULE(libavresample HAVE_FFMPEG_RESAMPLE)
-
-    CHECK_INCLUDE_FILE(libavformat/avformat.h HAVE_GENTOO_FFMPEG)
-    CHECK_INCLUDE_FILE(ffmpeg/avformat.h HAVE_FFMPEG_FFMPEG)
-    if(NOT HAVE_GENTOO_FFMPEG AND NOT HAVE_FFMPEG_FFMPEG)
-      if(EXISTS /usr/include/ffmpeg/libavformat/avformat.h OR HAVE_FFMPEG_SWSCALE)
-        set(HAVE_GENTOO_FFMPEG TRUE)
+    set(HIGHGUI_LIBRARIES ${HIGHGUI_LIBRARIES} "${FFMPEG_LIB_DIR}/libavcodec.so"
+      "${FFMPEG_LIB_DIR}/libavformat.so" "${FFMPEG_LIB_DIR}/libavutil.so"
+      "${FFMPEG_LIB_DIR}/libswscale.so")
+    set(HAVE_GENTOO_FFMPEG TRUE)
+    if(EXISTS "${FFMPEG_LIB_DIR}/libavcodec.so")
+      set(HAVE_FFMPEG_CODEC TRUE)
+      set(ALIASOF_libavcodec_VERSION "Unknown")
+      if(EXISTS "${FFMPEG_LIB_DIR}/libavformat.so")
+	set(HAVE_FFMPEG_FORMAT TRUE)
+	set(ALIASOF_libavformat_VERSION "Unknown")
+	if(EXISTS "${FFMPEG_LIB_DIR}/libavutil.so")
+	  set(HAVE_FFMPEG_UTIL TRUE)
+	  set(ALIASOF_libavutil_VERSION "Unknown")
+	  if(EXISTS "${FFMPEG_LIB_DIR}/libswscale.so")
+	    set(HAVE_FFMPEG_SWSCALE TRUE)
+	    set(ALIASOF_libswscale_VERSION "Unknown")
+	    set(HAVE_FFMPEG TRUE)
+	  endif()
+	endif()
       endif()
     endif()
-    if(HAVE_FFMPEG_CODEC AND HAVE_FFMPEG_FORMAT AND HAVE_FFMPEG_UTIL AND HAVE_FFMPEG_SWSCALE)
-      set(HAVE_FFMPEG TRUE)
-    endif()
+    ocv_include_directories(${FFMPEG_INCLUDE_DIR})
+    
+#    CHECK_MODULE(libavcodec HAVE_FFMPEG_CODEC)
+#    CHECK_MODULE(libavformat HAVE_FFMPEG_FORMAT)
+#    CHECK_MODULE(libavutil HAVE_FFMPEG_UTIL)
+#    CHECK_MODULE(libswscale HAVE_FFMPEG_SWSCALE)
+
+#    CHECK_INCLUDE_FILE(libavformat/avformat.h HAVE_GENTOO_FFMPEG)
+#    CHECK_INCLUDE_FILE(ffmpeg/avformat.h HAVE_FFMPEG_FFMPEG)
+#    if(NOT HAVE_GENTOO_FFMPEG AND NOT HAVE_FFMPEG_FFMPEG)
+#      if(EXISTS /usr/include/ffmpeg/libavformat/avformat.h OR HAVE_FFMPEG_SWSCALE)
+#        set(HAVE_GENTOO_FFMPEG TRUE)
+#      endif()
+#    endif()
+#    if(HAVE_FFMPEG_CODEC AND HAVE_FFMPEG_FORMAT AND HAVE_FFMPEG_UTIL AND HAVE_FFMPEG_SWSCALE)
+#      set(HAVE_FFMPEG TRUE)
+#    endif()
 
     if(HAVE_FFMPEG)
       # Find the bzip2 library because it is required on some systems
@@ -229,55 +200,42 @@ if(WITH_FFMPEG)
         # Do an other trial
         FIND_FILE(BZIP2_LIBRARIES NAMES libbz2.so.1 PATHS /lib)
       endif()
-    else()
-      find_path(FFMPEG_INCLUDE_DIR "libavformat/avformat.h"
-                PATHS /usr/local /usr /opt
-                PATH_SUFFIXES include
-                DOC "The path to FFMPEG headers")
-      if(FFMPEG_INCLUDE_DIR)
-        set(HAVE_GENTOO_FFMPEG TRUE)
-        set(FFMPEG_LIB_DIR "${FFMPEG_INCLUDE_DIR}/../lib" CACHE PATH "Full path of FFMPEG library directory")
-        find_library(FFMPEG_CODEC_LIB "avcodec" HINTS "${FFMPEG_LIB_DIR}")
-        find_library(FFMPEG_FORMAT_LIB "avformat" HINTS "${FFMPEG_LIB_DIR}")
-        find_library(FFMPEG_UTIL_LIB "avutil" HINTS "${FFMPEG_LIB_DIR}")
-        find_library(FFMPEG_SWSCALE_LIB "swscale" HINTS "${FFMPEG_LIB_DIR}")
-        find_library(FFMPEG_RESAMPLE_LIB "avresample" HINTS "${FFMPEG_LIB_DIR}")
-        if(FFMPEG_CODEC_LIB)
-          set(HAVE_FFMPEG_CODEC 1)
-        endif()
-        if(FFMPEG_FORMAT_LIB)
+    endif(HAVE_FFMPEG)
+  endif()
+
+  if(APPLE)
+    find_path(FFMPEG_INCLUDE_DIR "libavformat/avformat.h"
+              PATHS /usr/local /usr /opt
+              PATH_SUFFIXES include
+              DOC "The path to FFMPEG headers")
+    if(FFMPEG_INCLUDE_DIR)
+      set(HAVE_GENTOO_FFMPEG TRUE)
+      set(FFMPEG_LIB_DIR "${FFMPEG_INCLUDE_DIR}/../lib" CACHE PATH "Full path of FFMPEG library directory")
+      if(EXISTS "${FFMPEG_LIB_DIR}/libavcodec.a")
+        set(HAVE_FFMPEG_CODEC 1)
+        set(ALIASOF_libavcodec_VERSION "Unknown")
+        if(EXISTS "${FFMPEG_LIB_DIR}/libavformat.a")
           set(HAVE_FFMPEG_FORMAT 1)
-        endif()
-        if(FFMPEG_UTIL_LIB)
-          set(HAVE_FFMPEG_UTIL 1)
-        endif()
-        if(FFMPEG_SWSCALE_LIB)
-          set(HAVE_FFMPEG_SWSCALE 1)
-        endif()
-        if(FFMPEG_CODEC_LIB AND FFMPEG_FORMAT_LIB AND
-           FFMPEG_UTIL_LIB AND FFMPEG_SWSCALE_LIB)
-          set(ALIASOF_libavcodec_VERSION "Unknown")
           set(ALIASOF_libavformat_VERSION "Unknown")
-          set(ALIASOF_libavutil_VERSION "Unknown")
-          set(ALIASOF_libswscale_VERSION "Unknown")
-          set(HAVE_FFMPEG 1)
-          if(FFMPEG_RESAMPLE_LIB)
-            set(HAVE_FFMPEG_RESAMPLE 1)
-            set(ALIASOF_libavresample_VERSION "Unknown")
+          if(EXISTS "${FFMPEG_LIB_DIR}/libavutil.a")
+            set(HAVE_FFMPEG_UTIL 1)
+            set(ALIASOF_libavutil_VERSION "Unknown")
+            if(EXISTS "${FFMPEG_LIB_DIR}/libswscale.a")
+              set(HAVE_FFMPEG_SWSCALE 1)
+              set(ALIASOF_libswscale_VERSION "Unknown")
+              set(HAVE_FFMPEG 1)
+            endif()
           endif()
         endif()
-      endif(FFMPEG_INCLUDE_DIR)
-      if(HAVE_FFMPEG)
-        set(VIDEOIO_LIBRARIES ${VIDEOIO_LIBRARIES} "${FFMPEG_LIB_DIR}/libavcodec.a"
-            "${FFMPEG_LIB_DIR}/libavformat.a" "${FFMPEG_LIB_DIR}/libavutil.a"
-            "${FFMPEG_LIB_DIR}/libswscale.a")
-        if(HAVE_FFMPEG_RESAMPLE)
-          set(VIDEOIO_LIBRARIES ${VIDEOIO_LIBRARIES} "${FFMPEG_LIB_DIR}/libavresample.a")
-        endif()
-        ocv_include_directories(${FFMPEG_INCLUDE_DIR})
-      endif(HAVE_FFMPEG)
+      endif()
+    endif(FFMPEG_INCLUDE_DIR)
+    if(HAVE_FFMPEG)
+      set(HIGHGUI_LIBRARIES ${HIGHGUI_LIBRARIES} "${FFMPEG_LIB_DIR}/libavcodec.a"
+          "${FFMPEG_LIB_DIR}/libavformat.a" "${FFMPEG_LIB_DIR}/libavutil.a"
+          "${FFMPEG_LIB_DIR}/libswscale.a")
+      ocv_include_directories(${FFMPEG_INCLUDE_DIR})
     endif()
-  endif()
+  endif(APPLE)
 endif(WITH_FFMPEG)
 
 # --- VideoInput/DirectShow ---
@@ -287,22 +245,18 @@ if(WITH_DSHOW)
 endif(WITH_DSHOW)
 
 # --- VideoInput/Microsoft Media Foundation ---
-ocv_clear_vars(HAVE_MSMF)
 if(WITH_MSMF)
   check_include_file(Mfapi.h HAVE_MSMF)
 endif(WITH_MSMF)
 
-# --- Extra HighGUI and VideoIO libs on Windows ---
+# --- Extra HighGUI libs on Windows ---
 if(WIN32)
-  list(APPEND HIGHGUI_LIBRARIES comctl32 gdi32 ole32 setupapi ws2_32)
-  if(HAVE_VFW)
-    list(APPEND VIDEOIO_LIBRARIES vfw32)
-  endif()
+  list(APPEND HIGHGUI_LIBRARIES comctl32 gdi32 ole32 setupapi ws2_32 vfw32)
   if(MINGW64)
-    list(APPEND VIDEOIO_LIBRARIES avifil32 avicap32 winmm msvfw32)
-    list(REMOVE_ITEM VIDEOIO_LIBRARIES vfw32)
+    list(APPEND HIGHGUI_LIBRARIES avifil32 avicap32 winmm msvfw32)
+    list(REMOVE_ITEM HIGHGUI_LIBRARIES vfw32)
   elseif(MINGW)
-    list(APPEND VIDEOIO_LIBRARIES winmm)
+    list(APPEND HIGHGUI_LIBRARIES winmm)
   endif()
 endif(WIN32)
 
@@ -315,34 +269,7 @@ endif()
 if (NOT IOS)
   if(WITH_QUICKTIME)
     set(HAVE_QUICKTIME YES)
-  elseif(APPLE AND CMAKE_COMPILER_IS_CLANGCXX)
+  elseif(APPLE)
     set(HAVE_QTKIT YES)
   endif()
 endif()
-
-# --- Intel Perceptual Computing SDK ---
-if(WITH_INTELPERC)
-  include("${OpenCV_SOURCE_DIR}/cmake/OpenCVFindIntelPerCSDK.cmake")
-endif(WITH_INTELPERC)
-
-# --- gPhoto2 ---
-ocv_clear_vars(HAVE_GPHOTO2)
-if(WITH_GPHOTO2)
-  CHECK_MODULE(libgphoto2 HAVE_GPHOTO2)
-endif(WITH_GPHOTO2)
-
-# --- VA & VA_INTEL ---
-if(WITH_VA_INTEL)
-  include("${OpenCV_SOURCE_DIR}/cmake/OpenCVFindVA_INTEL.cmake")
-  if(VA_INTEL_IOCL_INCLUDE_DIR)
-    ocv_include_directories(${VA_INTEL_IOCL_INCLUDE_DIR})
-  endif()
-  set(WITH_VA YES)
-endif(WITH_VA_INTEL)
-
-if(WITH_VA)
-  include("${OpenCV_SOURCE_DIR}/cmake/OpenCVFindVA.cmake")
-  if(VA_INCLUDE_DIR)
-    ocv_include_directories(${VA_INCLUDE_DIR})
-  endif()
-endif(WITH_VA)
-- 
2.7.4

